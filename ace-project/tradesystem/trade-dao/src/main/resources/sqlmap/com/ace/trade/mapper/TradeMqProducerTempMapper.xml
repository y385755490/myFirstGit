<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ace.trade.mapper.TradeMqProducerTempMapper">
  <resultMap id="BaseResultMap" type="com.ace.trade.entity.TradeMqProducerTemp">
    <id column="group_name" jdbcType="VARCHAR" property="groupName" />
    <id column="msg_tag" jdbcType="VARCHAR" property="msgTag" />
    <id column="msg_keys" jdbcType="VARCHAR" property="msgKeys" />
    <result column="msg_body" jdbcType="VARCHAR" property="msgBody" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    group_name, msg_tag, msg_keys, msg_body, create_time
  </sql>
  <select id="selectByExample" parameterType="com.ace.trade.entity.TradeMqProducerTempExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from trade_mq_producer_temp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.ace.trade.entity.TradeMqProducerTempKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from trade_mq_producer_temp
    where group_name = #{groupName,jdbcType=VARCHAR}
      and msg_tag = #{msgTag,jdbcType=VARCHAR}
      and msg_keys = #{msgKeys,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.ace.trade.entity.TradeMqProducerTempKey">
    delete from trade_mq_producer_temp
    where group_name = #{groupName,jdbcType=VARCHAR}
      and msg_tag = #{msgTag,jdbcType=VARCHAR}
      and msg_keys = #{msgKeys,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ace.trade.entity.TradeMqProducerTempExample">
    delete from trade_mq_producer_temp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="group_name" keyProperty="groupName" parameterType="com.ace.trade.entity.TradeMqProducerTemp" useGeneratedKeys="true">
    insert into trade_mq_producer_temp (msg_tag, msg_keys, msg_body, 
      create_time)
    values (#{msgTag,jdbcType=VARCHAR}, #{msgKeys,jdbcType=VARCHAR}, #{msgBody,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="group_name" keyProperty="groupName" parameterType="com.ace.trade.entity.TradeMqProducerTemp" useGeneratedKeys="true">
    insert into trade_mq_producer_temp
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="msgTag != null">
        msg_tag,
      </if>
      <if test="msgKeys != null">
        msg_keys,
      </if>
      <if test="msgBody != null">
        msg_body,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="msgTag != null">
        #{msgTag,jdbcType=VARCHAR},
      </if>
      <if test="msgKeys != null">
        #{msgKeys,jdbcType=VARCHAR},
      </if>
      <if test="msgBody != null">
        #{msgBody,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ace.trade.entity.TradeMqProducerTempExample" resultType="java.lang.Long">
    select count(*) from trade_mq_producer_temp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update trade_mq_producer_temp
    <set>
      <if test="record.groupName != null">
        group_name = #{record.groupName,jdbcType=VARCHAR},
      </if>
      <if test="record.msgTag != null">
        msg_tag = #{record.msgTag,jdbcType=VARCHAR},
      </if>
      <if test="record.msgKeys != null">
        msg_keys = #{record.msgKeys,jdbcType=VARCHAR},
      </if>
      <if test="record.msgBody != null">
        msg_body = #{record.msgBody,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update trade_mq_producer_temp
    set group_name = #{record.groupName,jdbcType=VARCHAR},
      msg_tag = #{record.msgTag,jdbcType=VARCHAR},
      msg_keys = #{record.msgKeys,jdbcType=VARCHAR},
      msg_body = #{record.msgBody,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ace.trade.entity.TradeMqProducerTemp">
    update trade_mq_producer_temp
    <set>
      <if test="msgBody != null">
        msg_body = #{msgBody,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where group_name = #{groupName,jdbcType=VARCHAR}
      and msg_tag = #{msgTag,jdbcType=VARCHAR}
      and msg_keys = #{msgKeys,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ace.trade.entity.TradeMqProducerTemp">
    update trade_mq_producer_temp
    set msg_body = #{msgBody,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where group_name = #{groupName,jdbcType=VARCHAR}
      and msg_tag = #{msgTag,jdbcType=VARCHAR}
      and msg_keys = #{msgKeys,jdbcType=VARCHAR}
  </update>
</mapper>